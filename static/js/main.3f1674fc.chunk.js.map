{"version":3,"sources":["components/ClickImage/ClickImage.js","components/Navbar/Navbar.js","components/Jumbotron/Jumbotron.js","App.js","index.js"],"names":["ClickImage","props","react_default","a","createElement","className","alt","name","src","image","onClick","clickedImg","id","Navbar","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","href","message","score","topScore","Jumbotron","App","state","images","clickedImgIdArr","randomArray","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","imageIds","_this","map","pic","includes","pickedImgId","filter","picId","console","log","newArray","concat","setState","handleTopScore","shuffledArr","_this2","this","components_Navbar_Navbar","components_Jumbotron_Jumbotron","components_ClickImage_ClickImage","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.3f1674fc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./ClickImage.css\";\r\n\r\nconst ClickImage = props => (\r\n  <div className=\"row px-4\">\r\n    <div className=\"col-12 col-sm-4 col-md-3\">\r\n      <img alt={props.name} src={props.image} onClick={() => props.clickedImg(props.id)} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default ClickImage;","import React from 'react';\nimport \"./Navbar.css\";\n\nconst Navbar = props => (\n  <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\n    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse my-2\" id=\"navbarNav\">\n\n  \n          <h4 className=\"mr-auto\"><a href=\"/\">Clicky Game</a></h4>\n      \n  \n          <h4 className=\"mx-auto\">{props.message}</h4>\n      \n  \n          <h4 className=\"ml-auto\">Score: {props.score} | Top Score: {props.topScore}</h4>\n      \n\n    </div>\n  </nav>\n)\n\nexport default Navbar;","import React from 'react';\r\n\r\nconst Jumbotron = () => (\r\n  <div className=\"jumbotron jumbotron-fluid mt-5\">\r\n  <div className=\"container text-center\">\r\n    <h1 className=\"display-4\">Clicky Game</h1>\r\n    <p className=\"lead\">Click on an image to earn points, but don't click on the same image twice! Get 12 points to win!</p>\r\n  </div>\r\n  </div>\r\n)\r\n\r\nexport default Jumbotron;","import React, { Component } from 'react';\nimport ClickImage from \"./components/ClickImage\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Jumbotron from \"./components/Jumbotron/Jumbotron\";\nimport images from \"./images.json\";\nimport './App.css';\n\nclass App extends Component {\n  // set this.state.images to the images json\n  state = {\n    images,\n    score: 0,\n    message: \"Click an image to begin!\",\n    clickedImgIdArr: [],\n    topScore: 0\n\n  }\n\n  // shuffle this.state.images array\n  randomArray = (array) => {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n    while (0 !== currentIndex) {\n  \n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n  \n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n  \n    return array;  \n    \n  }\n\n  clickedImg = id => {\n    // filter the clicked image id into new array and add to clicked on Array\n    const imageIds = this.state.images.map(pic => {\n      return pic.id\n    });\n\n    if (this.state.clickedImgIdArr.includes(id) === false) {\n      const pickedImgId = imageIds.filter(picId => picId === id);\n      console.log(pickedImgId);\n\n      let newArray = this.state.clickedImgIdArr.concat(pickedImgId);\n      console.log(`New Array is ${newArray}`);\n\n      // Set state to new array and increase score by 1\n      this.setState({ \n        score: this.state.score + 1,\n        message: \"You guessed correctly!\",\n        clickedImgIdArr: newArray,\n      }); \n      \n      this.handleTopScore();\n      \n\n    } else if (this.state.clickedImgIdArr.includes(id) === true) {\n      this.setState({ \n        score: 0,\n        message: \"You guessed incorrectly! Start over\",\n        clickedImgIdArr: []\n      });\n      console.log(this.state.clickedImgIdArr)\n    }\n    const shuffledArr = this.randomArray(this.state.images);\n    this.setState({\n      images: shuffledArr\n    })\n\n    \n  }\n\n  // update top score if top score is beaten\n  handleTopScore = () => {\n    if (this.state.score >= this.state.topScore) {\n      this.setState({\n        topScore: this.state.topScore + 1\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar message={this.state.message} score={this.state.score} topScore={this.state.topScore}/>\n        <Jumbotron />\n        <div className=\"image-container container\">\n          {this.state.images.map(image => (\n            <ClickImage\n              key={image.id}\n              id={image.id}\n              name={image.name}\n              image={image.image}\n              clickedImg={this.clickedImg}\n            />\n          ))}\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}